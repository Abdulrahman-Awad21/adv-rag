"""try to fix the version issue

Revision ID: 1ba5a74b2025
Revises: f4c6edd1f9a9
Create Date: 2025-06-24 12:05:09.544343

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1ba5a74b2025'
down_revision: Union[str, None] = 'f4c6edd1f9a9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('project_access')
    # op.drop_index('ix_users_username', table_name='users')
    # op.drop_table('users')
    # op.drop_constraint('projects_owner_id_fkey', 'projects', type_='foreignkey')
    # op.drop_column('projects', 'owner_id')
    # ### end Alembic commands ###
    pass


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('projects', sa.Column('owner_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('projects_owner_id_fkey', 'projects', 'users', ['owner_id'], ['id'])
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('role', postgresql.ENUM('ADMIN', 'CONTENT_MANAGER', 'END_USER', name='userroleenum'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_table('project_access',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.project_id'], name='project_access_project_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='project_access_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='project_access_pkey'),
    sa.UniqueConstraint('user_id', 'project_id', name='_user_project_uc')
    )
    # ### end Alembic commands ###
