"""make_user_password_nullable_for_setup_flow

Revision ID: 754e151caf21
Revises: 8b62ce46ebe6
Create Date: 2025-06-29 17:46:00.427930

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '754e151caf21'
down_revision: Union[str, None] = '8b62ce46ebe6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('pgdata_proj1_asset6_sheet_2022')
    op.drop_table('pgdata_proj1_asset3_sheet_2022')
    op.drop_table('collection_384_2')
    op.drop_table('pgdata_proj1_asset3_sheet3')
    op.drop_table('pgdata_proj1_asset6_sheet3')
    op.drop_table('pgdata_proj1_asset6_sheet2')
    op.drop_table('pgdata_proj1_asset3_sheet2')
    op.drop_table('collection_384_1')
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'hashed_password',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_table('collection_384_1',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vector', sa.NullType(), autoincrement=False, nullable=True),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=True),
    sa.Column('chunk_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['chunk_id'], ['chunks.chunk_id'], name='collection_384_1_chunk_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='collection_384_1_pkey')
    )
    op.create_table('pgdata_proj1_asset3_sheet2',
    sa.Column('pg_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('county_', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('lpt_100', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lpt_retained_locally_80', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('equalisation_fund', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('discretionary_lpt', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lpt_self_funding__revenue_budget_', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_lpt_revenue_budget_', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lpt_self_funding__capital_budget', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_lpt_allocation', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('pg_id', name='pgdata_proj1_asset3_sheet2_pkey')
    )
    op.create_table('pgdata_proj1_asset6_sheet2',
    sa.Column('pg_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('county_', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('lpt_100', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lpt_retained_locally_80', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('equalisation_fund', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('discretionary_lpt', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lpt_self_funding__revenue_budget_', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_lpt_revenue_budget_', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lpt_self_funding__capital_budget', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_lpt_allocation', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('pg_id', name='pgdata_proj1_asset6_sheet2_pkey')
    )
    op.create_table('pgdata_proj1_asset6_sheet3',
    sa.Column('pg_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('county_', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('lpt_retained_locally_80', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('equalisation_fund', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('discretionary_lpt', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('lpt_self_funding__revenue_budget_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_lpt_revenue_budget_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('lpt_self_funding__capital_budget', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_lpt_allocation', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('pg_id', name='pgdata_proj1_asset6_sheet3_pkey')
    )
    op.create_table('pgdata_proj1_asset3_sheet3',
    sa.Column('pg_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('county_', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('lpt_retained_locally_80', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('equalisation_fund', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('discretionary_lpt', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('lpt_self_funding__revenue_budget_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_lpt_revenue_budget_', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('lpt_self_funding__capital_budget', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('total_lpt_allocation', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('pg_id', name='pgdata_proj1_asset3_sheet3_pkey')
    )
    op.create_table('collection_384_2',
    sa.Column('id', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('vector', sa.NullType(), autoincrement=False, nullable=True),
    sa.Column('metadata', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), autoincrement=False, nullable=True),
    sa.Column('chunk_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['chunk_id'], ['chunks.chunk_id'], name='collection_384_2_chunk_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='collection_384_2_pkey')
    )
    op.create_table('pgdata_proj1_asset3_sheet_2022',
    sa.Column('pg_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('county_', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('lpt_100', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lpt_retained_locally_80', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('equalisation_fund', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('discretionary_lpt', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lpt_self_funding__revenue_budget_', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_lpt_revenue_budget_', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lpt_self_funding__capital_budget', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_lpt_allocation', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('pg_id', name='pgdata_proj1_asset3_sheet_2022_pkey')
    )
    op.create_table('pgdata_proj1_asset6_sheet_2022',
    sa.Column('pg_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('county_', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('lpt_100', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lpt_retained_locally_80', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('equalisation_fund', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('discretionary_lpt', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lpt_self_funding__revenue_budget_', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_lpt_revenue_budget_', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('lpt_self_funding__capital_budget', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_lpt_allocation', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('pg_id', name='pgdata_proj1_asset6_sheet_2022_pkey')
    )
    # ### end Alembic commands ###
